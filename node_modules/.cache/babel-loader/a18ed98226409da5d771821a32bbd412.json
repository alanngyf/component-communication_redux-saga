{"ast":null,"code":"import { INCREMENT, INCREMENT_ASYNC } from \"../constant\";\nimport { put, takeEvery } from \"redux-saga/effects\";\n\n// export function* increment() {\n//   yield takeEvery(increment);\n// }\n\nexport function* incrementAsync(miliseconds) {\n  yield delay(miliseconds);\n  yield put({\n    type: INCREMENT\n  });\n}\nexport default function* countSaga() {\n  // yield takeEvery(INCREMENT_ASYNC, incrementAsync(500));\n}","map":{"version":3,"names":["INCREMENT","INCREMENT_ASYNC","put","takeEvery","incrementAsync","miliseconds","delay","type","countSaga"],"sources":["/Users/alanng/Projects/component-communication_redux-saga/src/redux/sagas/countSaga.js"],"sourcesContent":["import { INCREMENT, INCREMENT_ASYNC } from \"../constant\";\nimport { put, takeEvery } from \"redux-saga/effects\";\n\n// export function* increment() {\n//   yield takeEvery(increment);\n// }\n\nexport function* incrementAsync(miliseconds) {\n  yield delay(miliseconds);\n  yield put({ type: INCREMENT });\n}\n\nexport default function* countSaga() {\n  // yield takeEvery(INCREMENT_ASYNC, incrementAsync(500));\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,eAAe,QAAQ,aAAa;AACxD,SAASC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;;AAEnD;AACA;AACA;;AAEA,OAAO,UAAUC,cAAcA,CAACC,WAAW,EAAE;EAC3C,MAAMC,KAAK,CAACD,WAAW,CAAC;EACxB,MAAMH,GAAG,CAAC;IAAEK,IAAI,EAAEP;EAAU,CAAC,CAAC;AAChC;AAEA,eAAe,UAAUQ,SAASA,CAAA,EAAG;EACnC;AAAA"},"metadata":{},"sourceType":"module"}